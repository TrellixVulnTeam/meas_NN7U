# Generated by Django 3.0.1 on 2020-04-04 19:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import meas.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('Customer_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_acn', models.CharField(max_length=10, verbose_name='Kundennummer')),
                ('Customer_company', models.CharField(blank=True, max_length=200, null=True, verbose_name='Firma')),
                ('Customer_first', models.CharField(blank=True, max_length=200, null=True, verbose_name='Vorname')),
                ('Customer_last', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nachname')),
                ('Customer_street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Straße')),
                ('Customer_zip', models.CharField(blank=True, max_length=5, null=True, verbose_name='PLZ')),
                ('Customer_city', models.CharField(blank=True, max_length=200, null=True, verbose_name='Stadt')),
                ('Customer_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('Customer_mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-Mail')),
                ('Customer_ustid', models.CharField(blank=True, max_length=50, null=True, verbose_name='UstID')),
                ('Customer_ia', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Hinzugefügt am')),
                ('Customer_deleted', models.BooleanField(default=False, verbose_name='Gelöscht')),
            ],
        ),
        migrations.CreateModel(
            name='Customer_Project',
            fields=[
                ('CP_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('CP_number', models.CharField(max_length=10, verbose_name='Bauvorhaben')),
                ('CP_address', models.CharField(max_length=200, verbose_name='Adresse')),
                ('CP_address_add', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresszusatz')),
                ('CP_zip', models.CharField(max_length=5, verbose_name='PLZ')),
                ('CP_city', models.CharField(max_length=200, verbose_name='Stadt')),
                ('CP_contact', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ansprechpartner')),
                ('CP_contact_phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ansprechpartner Telefon')),
                ('CP_contact_mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Ansprechpartner E-Mail')),
                ('Customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('Employees_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Employees_acn', models.CharField(max_length=10, verbose_name='Mitarbeiternummer')),
                ('Employees_first', models.CharField(max_length=200, verbose_name='Vorname')),
                ('Employees_last', models.CharField(max_length=200, verbose_name='Nachname')),
                ('Employees_birthday', models.DateField(blank=True, null=True, verbose_name='Geburtstag')),
                ('Employees_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('Employees_mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-Mail')),
                ('Employees_vf', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Gültig von')),
                ('Employees_vu', models.DateTimeField(blank=True, null=True, verbose_name='Gültig bis')),
                ('Employees_ia', models.DateTimeField(auto_now=True, verbose_name='Hinzugefügt am')),
                ('Employees_deleted', models.BooleanField(default=False, verbose_name='Gelöscht')),
            ],
            options={
                'ordering': ['Employees_last'],
            },
        ),
        migrations.CreateModel(
            name='Mandant',
            fields=[
                ('Mandant_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Mandant_accn', models.CharField(max_length=10, verbose_name='Kundennummer')),
                ('Mandant_name', models.CharField(max_length=200, verbose_name='Bezeichnung')),
                ('Mandant_street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Straße')),
                ('Mandant_zip', models.CharField(blank=True, max_length=10, null=True, verbose_name='PLZ')),
                ('Mandant_city', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ort')),
                ('Mandant_iban', models.CharField(blank=True, max_length=200, null=True, verbose_name='IBAN')),
                ('Mandant_bic', models.CharField(blank=True, max_length=200, null=True, verbose_name='BIC')),
                ('Mandant_ustid', models.CharField(blank=True, max_length=200, null=True, verbose_name='UstID')),
                ('Mandant_vf', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Gültig von')),
                ('Mandant_vu', models.DateTimeField(blank=True, null=True, verbose_name='Gültig bis')),
                ('Mandant_ia', models.DateTimeField(auto_now=True, verbose_name='Hinzugefügt am')),
                ('Mandant_deleted', models.BooleanField(default=False, verbose_name='Gelöscht')),
            ],
            options={
                'ordering': ['Mandant_ia'],
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('Measurement_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Measurement_number', models.CharField(max_length=200, verbose_name='Aufmaßnummer')),
                ('Measurement_creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Anlagedatum')),
                ('Measurement_desc', models.CharField(blank=True, max_length=254, null=True, verbose_name='Aufmaßnotiz')),
                ('Measurement_signed_by', models.CharField(blank=True, max_length=200, null=True, verbose_name='Unterschrieben von')),
                ('Measurement_signature', models.FileField(blank=True, null=True, upload_to=meas.models.signature_directory_path, verbose_name='Unterschrift')),
                ('Measurement_editable', models.BooleanField(default=False, verbose_name='Abgeschlossen')),
            ],
        ),
        migrations.CreateModel(
            name='Timesheet_Type',
            fields=[
                ('Timesheet_Type_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Timesheet_Type_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Art')),
                ('Timesheet_Type_desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='Art Beschreibung')),
                ('Timesheet_Type_ia', models.DateTimeField(auto_now=True, verbose_name='Hinzugefügt am')),
                ('Timesheet_Type_deleted', models.BooleanField(default=False, verbose_name='Gelöscht')),
                ('Mandant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Mandant')),
            ],
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('Timesheet_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Timesheet_number', models.CharField(max_length=10, verbose_name='Stundenzettelnummer')),
                ('Timesheet_creation_date', models.DateTimeField(auto_now=True, verbose_name='Hinzugefügt am')),
                ('Timesheet_date_start', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Start Datum')),
                ('Timesheet_time_start', models.TimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Start Uhrzeit')),
                ('Timesheet_date_end', models.DateField(blank=True, null=True, verbose_name='Ende Datum')),
                ('Timesheet_time_end', models.TimeField(blank=True, null=True, verbose_name='Ende Uhrzeit')),
                ('Timesheet_deleted', models.BooleanField(default=False, verbose_name='Gelöscht')),
                ('Employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Employee')),
                ('Measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Measurement')),
                ('Timesheet_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Timesheet_Type')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('Product_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Artikelnummer')),
                ('Product_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Artikelbezeichnung')),
                ('Product_desc', models.CharField(blank=True, max_length=254, null=True, verbose_name='Beschreibung')),
                ('Product_supplier', models.CharField(blank=True, max_length=200, null=True, verbose_name='Lieferant')),
                ('Product_supplier_code', models.CharField(blank=True, max_length=200, null=True, verbose_name='Lieferantennummer')),
                ('Product_unit', models.CharField(blank=True, max_length=50, null=True, verbose_name='Einheit')),
                ('Product_ppu_net', models.FloatField(verbose_name='Preis pro Einheit (netto)')),
                ('Product_vf', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Gültig von')),
                ('Product_vu', models.DateTimeField(blank=True, null=True, verbose_name='Gültig bis')),
                ('Product_ia', models.DateTimeField(auto_now=True, verbose_name='Hinzugefügt am')),
                ('Product_deleted', models.BooleanField(default=False, verbose_name='Gelöscht')),
                ('Mandant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Mandant')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('Order_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_number', models.CharField(max_length=200, verbose_name='Auftragsnummer')),
                ('Order_creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Anlagedatum')),
                ('Order_input_channel', models.CharField(blank=True, max_length=200, null=True)),
                ('Order_desc', models.CharField(blank=True, max_length=254, null=True)),
                ('Order_date_sch', models.DateField(blank=True, null=True, verbose_name='Auftragsdatum geplant')),
                ('Order_time_sch', models.TimeField(blank=True, null=True, verbose_name='Auftragsuhrzeit geplant')),
                ('Order_date_act', models.DateField(blank=True, null=True, verbose_name='Auftragsdatum  tatsächlich')),
                ('Order_time_act', models.TimeField(blank=True, null=True, verbose_name='Auftragsuhrzeit tatsächlich')),
                ('Order_provision_date', models.DateField(blank=True, null=True, verbose_name='Bereitstellungsdatum')),
                ('Order_provision_time', models.TimeField(blank=True, null=True, verbose_name='Bereitstellungsuhrzeit')),
                ('Order_accepted', models.BooleanField(default=False, verbose_name='Angenommen')),
                ('CP', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Customer_Project')),
                ('Customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Customer')),
                ('Employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Employee')),
                ('Mandant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Mandant')),
            ],
        ),
        migrations.CreateModel(
            name='Measurement_Product',
            fields=[
                ('MP_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('MP_quantity', models.FloatField(blank=True, null=True, verbose_name='Menge')),
                ('MP_ia', models.DateTimeField(auto_now=True, verbose_name='Hinzugefügt am')),
                ('MP_deleted', models.BooleanField(default=False, verbose_name='Gelöscht')),
                ('Measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Measurement')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Product')),
            ],
        ),
        migrations.AddField(
            model_name='measurement',
            name='Order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Order'),
        ),
        migrations.AddField(
            model_name='employee',
            name='Mandant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Mandant'),
        ),
        migrations.AddField(
            model_name='customer',
            name='Mandant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Mandant'),
        ),
        migrations.CreateModel(
            name='Meas_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Mandant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas.Mandant')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
